Package to easily integrate docker (and potentially later docker-compose to have a more complex setup).

JWT built-in support for authentication and authorization. With user provided secret key in the .env and pepper.

String token = JwtToken.createJwe(userID, claims);
String token = JwtToken.createJws(userID, claims);
boolean isValid = JwtToken.validateJws(token);
String userID = JwtToken.getOwner(token);

in application.properties file: 

server.jwt.secret_key={SECRET_KEY}
server.jwt.pepper={PEPPER}

Improve CID Container to make it more flexible and allow injection in none-bean object classes.
Implement freemarker template to generate HTML pages and make it easy to integrate within the framework. 
Improve overall design of the JoltContext class, maybe by switching to an even better Builder pattern. 
Improve the logging and exception handling in the framework.
Improve configurability of the framework.
Improve annotation for database entity such as @Id, @Column, @Table ect, to make it more flexible and easy to use.
Implement automatic migration of database schema when the application is started.
Implement JsonIgnore annotation to ignore certains fields during serialization in both the Form package and the Json process.
Add Session management to the framework and make it secure and easy to use, built on top of Jakarta HttpSession, and also add a simple authentication mechanism.
Add an email service to the framework, which will allow testing and sending emails.
Add auto-scanning of packages for the CID Container, to make it easy to add new components without having to manually add them to the CID Container.

Add support for @JsonIgnore annotation to ignore certain fields during serialization in both the Form package and the Json process.
Add support for the Router to register custom routes.

Thing to fix with schema creator : 

- If lenght is not set for a String assume TEXT
- unique constraint doesn't seems to apply ... 
- It generated 3 indexes for a single field... 
- IDK where it is, but it doesn't seems to support UTF-8

- Add support for composite primary keys
- Add support for ManyToOne, OneToMany, ManyToMany relationships annotation
- Add support for Enum annotation using @Enum(values = {"value1", "value2", "value3"})
- Add support to better handle circular references.